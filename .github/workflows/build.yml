name: Build and Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    name: Build and Test
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false  # Don't fail all jobs if one fails
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        go: ['1.18', '1.19', '1.20']
    
    steps:
    - name: Set up Go
      uses: actions/setup-go@v4  # Updated to v4
      with:
        go-version: ${{ matrix.go }}
      
    - name: Check out code
      uses: actions/checkout@v3  # Updated to v3
      
    - name: Get dependencies
      run: go mod download
      
    - name: Build
      run: go build -v ./...
      
    - name: Test
      run: go test -v ./... -short  # Added -short flag to skip long-running tests
      
    - name: Run golangci-lint
      uses: golangci/golangci-lint-action@v3  # Updated to v3
      with:
        version: latest
        args: --timeout=5m
        skip-pkg-cache: true
        skip-build-cache: true
      
  coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    
    steps:
    - name: Set up Go
      uses: actions/setup-go@v4  # Updated to v4
      with:
        go-version: '1.20'
      
    - name: Check out code
      uses: actions/checkout@v3  # Updated to v3
      
    - name: Get dependencies
      run: go mod download
      
    - name: Generate coverage report
      run: go test -coverprofile=coverage.txt -covermode=atomic ./... -short  # Added -short flag
      
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3  # Updated to v3
      with:
        file: ./coverage.txt
        fail_ci_if_error: false
        
  release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [build, coverage]
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    permissions:
      contents: write  # Needed for creating releases
    
    steps:
    - name: Check out code
      uses: actions/checkout@v3  # Updated to v3
      
    - name: Set up Go
      uses: actions/setup-go@v4  # Updated to v4
      with:
        go-version: '1.20'
        
    - name: Get dependencies
      run: go mod download
      
    - name: Build for multiple platforms
      run: |
        mkdir -p dist
        GOOS=linux GOARCH=amd64 go build -o dist/helios-linux-amd64 ./cmd/helios
        GOOS=windows GOARCH=amd64 go build -o dist/helios-windows-amd64.exe ./cmd/helios
        GOOS=darwin GOARCH=amd64 go build -o dist/helios-darwin-amd64 ./cmd/helios
        
    - name: Release
      uses: softprops/action-gh-release@v1  # Using a more modern release action
      with:
        files: |
          dist/helios-linux-amd64
          dist/helios-windows-amd64.exe
          dist/helios-darwin-amd64
        draft: false
        prerelease: false